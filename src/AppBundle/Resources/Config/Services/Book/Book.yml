parameters:
  my_company.book.entity.class: MyCompany\Book\DomainModel\BookEntity
services:
  my_company.book.repository:
    class: MyCompany\Book\Infrastructure\Persistance\Doctrine\BookRepository
    arguments: ['@doctrine.orm.entity_manager', '%my_company.book.entity.class%']

  my_company.update_book.command_handler:
        class: MyCompany\Book\Command\UpdateBookCommandHandler
        arguments: ['@my_company.book.repository']
        tags:
            - { name: command_handler, handles: MyCompany\Book\Command\UpdateBookCommand }

  my_company.create_book.command_handler:
        class: MyCompany\Book\Command\CreateBookCommandHandler
        arguments: ['@my_company.book.repository', '@event_bus']
        tags:
            - { name: command_handler, handles: MyCompany\Book\Command\CreateBookCommand }

  my_company.delete_book.command_handler:
        class: MyCompany\Book\Command\DeleteBookCommandHandler
        arguments: ['@my_company.book.repository']
        tags:
            - { name: command_handler, handles: MyCompany\Book\Command\DeleteBookCommand }

  my_company.create_book.email.sparkpost.adapter:
    arguments: []
    class: MyCompany\Book\Infrastructure\Communications\SparkPost\SparkPostBookCreatedEmail

  my_company.create_book.email.listener:
    class: MyCompany\Book\DomainModel\BookCreatedEmailListener
    arguments: ['@my_company.create_book.email.sparkpost.adapter']
    tags:
        - { name: event_subscriber, subscribes_to: MyCompany\Book\DomainModel\BookCreatedEmailEvent }